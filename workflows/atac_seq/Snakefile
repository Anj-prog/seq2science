from snakemake.utils import validate


# complement the configuration
if not 'validated' in globals():
    validated = True
    configfile: "config.yaml"
    for schema in ['general', 'download', 'alignment', 'peakcalling']:
        validate(config, schema=f"../../schemas/config/{schema}.schema.yaml")

# do onstart/onexit things
schemas = ['sample', 'assembly', 'condition']
include: f"{config['rule_dir']}/configuration.smk"


# load the 'subworkflow' alignment
include: "../alignment/Snakefile"


# load the remaining relevant rules
include: f"{config['rule_dir']}/call_peak.smk"
include: f"{config['rule_dir']}/get_genome.smk"
include: f"{config['rule_dir']}/qc.smk"
include: f"{config['rule_dir']}/trackhub.smk"


# load the quality control files
quality_control = []
for sample in samples.index:
    quality_control.extend(get_trimming_qc(sample))
    quality_control.extend(get_alignment_qc(sample))
    quality_control.extend(get_peak_calling_qc(sample))


rule call_peaks_all:
    """
    call peaks for each sample (or condition if applies)
    """
    input:
         expand("{result_dir}/trackhub/", **config),
#          expand("{result_dir}/qc/multiqc.html", **config)
